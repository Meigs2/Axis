[package]
edition = "2021"
name = "axis-embedded"
version = "0.1.0"
license = "MIT OR Apache-2.0"

[dependencies]
axis-protocol = {path = "../axis-protocol"}

embassy-embedded-hal = { git = "https://github.com/Meigs2/embassy.git", branch = "embassy-rp-fix-spi-rx-only-dma", features = ["defmt"] }
embassy-sync = { git = "https://github.com/Meigs2/embassy.git", branch = "embassy-rp-fix-spi-rx-only-dma", features = ["defmt"] }
embassy-executor = { git = "https://github.com/Meigs2/embassy.git", branch = "embassy-rp-fix-spi-rx-only-dma", features = ["task-arena-size-98304", "arch-cortex-m", "executor-thread", "executor-interrupt", "defmt", "integrated-timers"] }
embassy-time = { git = "https://github.com/Meigs2/embassy.git", branch = "embassy-rp-fix-spi-rx-only-dma", features = ["defmt", "defmt-timestamp-uptime"] }
embassy-rp = { git = "https://github.com/Meigs2/embassy.git", branch = "embassy-rp-fix-spi-rx-only-dma", features = ["rp2040", "defmt", "unstable-pac", "time-driver", "critical-section-impl"] }
embassy-usb = { git = "https://github.com/Meigs2/embassy.git", branch = "embassy-rp-fix-spi-rx-only-dma", features = ["defmt"] }
embassy-futures = { git = "https://github.com/Meigs2/embassy.git", branch = "embassy-rp-fix-spi-rx-only-dma" }
embassy-usb-logger = { git = "https://github.com/Meigs2/embassy.git", branch = "embassy-rp-fix-spi-rx-only-dma" }
cyw43 = { git = "https://github.com/Meigs2/embassy.git", branch = "embassy-rp-fix-spi-rx-only-dma", features = ["defmt", "firmware-logs"] }
cyw43-pio = { git = "https://github.com/Meigs2/embassy.git", branch = "embassy-rp-fix-spi-rx-only-dma", features = ["defmt", "overclock"] }

defmt = "0.3"
defmt-rtt = "0.4"
fixed = "1.23.1"
fixed-macro = "1.2"

#cortex-m = { version = "0.7.6", features = ["critical-section-single-core"] }
cortex-m = { version = "0.7.7", features = ["inline-asm"] }
cortex-m-rt = "0.7.3"
panic-probe = { version = "0.3.2", features = ["print-defmt"] }
futures = { version = "0.3.31", default-features = false, features = ["async-await", "cfg-target-has-atomic", "unstable"] }
display-interface-spi = "0.5"
byte-slice-cast = { version = "1.2.0", default-features = false }
smart-leds = "0.3.0"

embedded-hal-1 = { package = "embedded-hal", version = "1.0" }
embedded-hal-async = "1.0"
embedded-hal-bus = { version = "0.1", features = ["async"] }
embedded-io-async = { version = "0.6.1", features = ["defmt-03"] }
embedded-storage = { version = "0.3" }
static_cell = { version = "2", features = ["nightly"] }
portable-atomic = { version = "1.5", features = ["critical-section"] }
log = "0.4"
pio-proc = "0.2"
pio = "0.2.1"
rand = { version = "0.8.5", default-features = false }
thiserror-no-std = "2.0.2"
serde = { version = "1.0.214", default-features = false, features = ["derive"] }
heapless = { version = "0.7.16", features = ["defmt-impl", "serde"] }
bitfield = "0.17.0"
num-traits = { version = "0.2.16", default-features = false }
assign-resources = "0.4.1"
bitflags = "2.6.0"
postcard = "1.0.10"
# This isn't required for development builds, but makes development
# build behavior match release builds. To enable unwinding panics
# during development, simply remove this line.
# panic = "abort"
deku = { version = "0.18.1", default-features = false, features = ["alloc", "bits"] }
embedded-alloc = "0.6.0"


[profile.release]
panic = "abort"
debug = 2
lto = true
opt-level = 'z'

[profile.dev]
panic = "abort"
